@use "_" as *;

.card {
	background-color: #{rgba(#000, 0.3)};
	border-radius: var(--borderRadius);
	display: block;
	overflow: hidden;
}

.card[type="mini"] .avatar {
	height: 300px;
}

.card[type="wide"] .avatar {
	height: 500px;
}

.avatar {
	position: relative;
	z-index: 1;

	.avatarBG {
		width: 100%;
		height: 100%;
		background-position: center;
		background-size: cover;
		position: absolute;
		inset: 0 0 auto auto;
		transition: transform 100ms linear;
		pointer-events: none;
	}
}

.content {
	padding: 30px;
	position: relative;
	z-index: 2;
}

.links {
	margin: 10px 0;
	display: flex;
	flex-flow: row wrap;
	gap: 15px;

	a {
		color: #{rgba(#fff, 0.8)};
		cursor: pointer;
		user-select: none;
		transition-property: color;
		transition-duration: 100ms;
		transition-timing-function: linear;
		display: flex;
		flex-flow: row;
		align-items: center;
		gap: 10px;
		overflow: hidden;

		&:hover {
			color: #{rgba(#fff, 1)};
		}

		span {
			&:last-child {
				width: 100%;
				text-overflow: ellipsis;
				white-space: nowrap;
				overflow: hidden;
			}
		}

		svg {
			min-width: 20px;
			height: 20px;
		}
	}
}

.description {
	font-size: 0.9rem;
	white-space: pre-wrap;
}

.card-actions {
	width: 100%;
	margin: 25px 0;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 15px;

	a {
		color: #{rgba(#fff, 0.8)};
		background-color: #{rgba($brandColor, 0.5)};
		border-radius: var(--borderRadius);
		padding: 8px 12px;
		cursor: pointer;
		user-select: none;
		transition-property: background-color, color;
		transition-duration: 100ms;
		transition-timing-function: linear;

		&:hover {
			color: #{rgba(#fff, 1)};
			background-color: #{rgba($brandColor, 0.8)};
		}
	}
}
